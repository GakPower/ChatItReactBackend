{"version":3,"sources":["components/secondary/NavBar/NavBar.tsx","components/secondary/Field/Field.tsx","ServerUtils.ts","components/primary/Login/Login.tsx","components/primary/Join/Join.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavBar","id","to","Field","register","type","name","placeholder","invalid","shouldCheck","useState","passShown","setPassShown","className","classes","push","join","getClasses","ref","defaultValue","onClick","oldValue","tabIndex","SERVER_IP","joinUser","a","username","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","catch","error","console","log","loginUser","emailLogin","setCookie","emailUsername","jsonRes","token","path","sameSite","logPosts","Authorization","Login","useCookies","cookies","disabled","setDisabled","useForm","handleSubmit","errors","reset","setError","onSubmit","setTimeout","test","message","renderErrors","Join","setShouldCheck","watch","passwordWatch","field","required","maxLength","value","pattern","minLength","validate","passConfirm","App","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85e7da6f.chunk.js","sourcesContent":["import React from 'react';\nimport './NavBar.scss';\nimport { Link } from 'react-router-dom';\n\nexport const NavBar = () => {\n\treturn (\n\t\t<nav id='navBar'>\n\t\t\t<Link to='/'>ChatIt</Link>\n\t\t\t<div>\n\t\t\t\t<Link to='/login'>Login</Link>\n\t\t\t\t<Link to='/join'>Join</Link>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n","import React, { useState } from 'react';\nimport './Field.scss';\n\ninterface Props {\n\tregister: any;\n\ttype: string;\n\tname: string;\n\tplaceholder: string;\n\tinvalid?: any;\n\tshouldCheck?: boolean;\n}\nexport const Field = ({\n\tregister,\n\ttype,\n\tname,\n\tplaceholder,\n\tinvalid,\n\tshouldCheck = false,\n}: Props) => {\n\tconst [passShown, setPassShown] = useState(false);\n\n\tconst getClasses = () => {\n\t\tconst classes = [];\n\t\tif (shouldCheck) classes.push(invalid ? 'invalid' : 'valid');\n\t\treturn classes.join(' ');\n\t};\n\treturn (\n\t\t<div id='field' className={getClasses()}>\n\t\t\t<input\n\t\t\t\tclassName={type === 'password' ? 'pass' : ''}\n\t\t\t\tref={register}\n\t\t\t\tname={name}\n\t\t\t\ttype={passShown && type === 'password' ? 'text' : type}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tdefaultValue=''\n\t\t\t/>\n\n\t\t\t{type === 'password' && (\n\t\t\t\t<button\n\t\t\t\t\tclassName='toggle'\n\t\t\t\t\ttype='button'\n\t\t\t\t\tonClick={() => setPassShown((oldValue) => !oldValue)}\n\t\t\t\t\ttabIndex={-1}\n\t\t\t\t>\n\t\t\t\t\t{passShown ? 'H' : 'S'}\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","const SERVER_IP = 'http://localhost:5000';\n\nexport const joinUser = async ({\n\tusername,\n\temail,\n\tpassword,\n}: {\n\tusername: string;\n\temail: string;\n\tpassword: string;\n}) => {\n\treturn fetch(`${SERVER_IP}/join`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ username, email, password }),\n\t})\n\t\t.then((res) => res.json())\n\t\t.catch((error) => console.log({ error }));\n};\n\nexport const loginUser = async (\n\t{ emailUsername, password }: { emailUsername?: string; password: string },\n\temailLogin: boolean,\n\tsetCookie: any\n) => {\n\ttry {\n\t\tconst res = await fetch(`${SERVER_IP}/login`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ emailUsername, password, emailLogin }),\n\t\t});\n\n\t\tconst jsonRes = await res.json();\n\n\t\tsetCookie('token', jsonRes.token, { path: '/', sameSite: 'lax' });\n\t\tlogPosts(jsonRes.token);\n\t\treturn jsonRes;\n\t} catch (error) {\n\t\tconsole.log(error);\n\n\t\treturn error;\n\t}\n};\n\nexport const logPosts = async (token: string) => {\n\ttry {\n\t\tconst res = await fetch(`${SERVER_IP}/posts`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + token,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t});\n\t\tconst jsonRes = await res.json();\n\t\treturn jsonRes;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","import React, { useState } from 'react';\nimport { Field } from '../../secondary/Field/Field';\nimport { useForm } from 'react-hook-form';\nimport { loginUser } from '../../../ServerUtils';\nimport { useCookies } from 'react-cookie';\nimport './Login.scss';\n\ninterface FormInput {\n\temailUsername: string;\n\tpassword: string;\n}\n\nexport const Login = () => {\n\tconst [cookies, setCookie] = useCookies();\n\tconst [disabled, setDisabled] = useState(false);\n\tconst { register, handleSubmit, errors, reset, setError } = useForm<\n\t\tFormInput\n\t>();\n\n\tconst renderErrors = () => {\n\t\tlet error;\n\t\tif (errors?.emailUsername) {\n\t\t\terror = errors?.emailUsername?.message;\n\t\t}\n\t\treturn <p>{error}</p>;\n\t};\n\n\tconst isEmail = (input: string) => {\n\t\tconst emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i;\n\t\treturn emailRegex.test(input);\n\t};\n\n\tconst onSubmit = async ({\n\t\temailUsername,\n\t\tpassword,\n\t}: {\n\t\temailUsername: string;\n\t\tpassword: string;\n\t}) => {\n\t\tsetDisabled(true);\n\t\tsetTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tawait loginUser(\n\t\t\t\t\t{ emailUsername, password },\n\t\t\t\t\tisEmail(emailUsername),\n\t\t\t\t\tsetCookie\n\t\t\t\t);\n\t\t\t\treset();\n\t\t\t} catch (error) {\n\t\t\t\tsetError('emailUsername', {\n\t\t\t\t\ttype: 'manual',\n\t\t\t\t\tmessage: error.message,\n\t\t\t\t});\n\t\t\t}\n\t\t\tconsole.log({ cookies });\n\t\t\tsetDisabled(false);\n\t\t}, 1000);\n\t};\n\n\treturn (\n\t\t<div id='loginContainer'>\n\t\t\t<h3>Login</h3>\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Field\n\t\t\t\t\tregister={register()}\n\t\t\t\t\tname='emailUsername'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Email or Username'\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tregister={register()}\n\t\t\t\t\tname='password'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tplaceholder='Password'\n\t\t\t\t/>\n\t\t\t\t{renderErrors()}\n\t\t\t\t<button type='submit' disabled={disabled}>\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n","import React, { useState } from 'react';\nimport { Field } from '../../secondary/Field/Field';\nimport { useForm } from 'react-hook-form';\nimport { joinUser } from '../../../ServerUtils';\nimport './Join.scss';\n\ninterface FormInput {\n\tusername: string;\n\temail: string;\n\tpassword: string;\n\tpassConfirm: string;\n}\n\nexport const Join = () => {\n\tconst [shouldCheck, setShouldCheck] = useState(false);\n\tconst [disabled, setDisabled] = useState(false);\n\n\tconst { register, handleSubmit, errors, watch, reset, setError } = useForm<\n\t\tFormInput\n\t>();\n\n\tconst passwordWatch = watch('password', '');\n\tconst emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i;\n\n\tconst renderErrors = () => {\n\t\tlet error;\n\t\tif (errors?.username) {\n\t\t\terror = errors?.username?.message;\n\t\t} else if (errors?.email) {\n\t\t\terror = errors?.email?.message;\n\t\t} else if (errors?.password) {\n\t\t\terror = errors?.password?.message;\n\t\t} else if (errors?.passConfirm) {\n\t\t\terror = 'Passwords do not match';\n\t\t}\n\t\treturn <p>{error}</p>;\n\t};\n\n\tconst onSubmit = async ({\n\t\tusername,\n\t\temail,\n\t\tpassword,\n\t}: {\n\t\tusername: string;\n\t\temail: string;\n\t\tpassword: string;\n\t}) => {\n\t\tsetDisabled(true);\n\t\tsetTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await joinUser({ username, email, password });\n\n\t\t\t\treset();\n\t\t\t\tsetShouldCheck(false);\n\t\t\t\tconsole.log({ res });\n\n\t\t\t\t// NAVIGATE TO APP\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('gg');\n\n\t\t\t\tconst res = await error.json();\n\t\t\t\tif (res.field) {\n\t\t\t\t\tsetError(res.field, {\n\t\t\t\t\t\ttype: 'manual',\n\t\t\t\t\t\tmessage: res.message,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log({ res });\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetDisabled(false);\n\t\t}, 1000);\n\t};\n\n\treturn (\n\t\t<div id='joinContainer'>\n\t\t\t<h3>Join</h3>\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Field\n\t\t\t\t\tregister={register({\n\t\t\t\t\t\trequired: 'Username is required',\n\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\tvalue: 255,\n\t\t\t\t\t\t\tmessage: 'Username is too long',\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t\tshouldCheck={shouldCheck}\n\t\t\t\t\tinvalid={errors?.username}\n\t\t\t\t\tname='username'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Username'\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tregister={register({\n\t\t\t\t\t\trequired: 'Email is required',\n\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\tvalue: 255,\n\t\t\t\t\t\t\tmessage: 'Email is too long',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpattern: { value: emailRegex, message: 'Invalid Email input' },\n\t\t\t\t\t})}\n\t\t\t\t\tshouldCheck={shouldCheck}\n\t\t\t\t\tinvalid={errors?.email}\n\t\t\t\t\tname='email'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Email'\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tregister={register({\n\t\t\t\t\t\trequired: 'Password is required',\n\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\tvalue: 8,\n\t\t\t\t\t\t\tmessage: 'Password is too short',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\tvalue: 255,\n\t\t\t\t\t\t\tmessage: 'Password is too long',\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t\tshouldCheck={shouldCheck}\n\t\t\t\t\tinvalid={errors?.password}\n\t\t\t\t\tname='password'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tplaceholder='Password'\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tregister={register({\n\t\t\t\t\t\trequired: 'Confirm Password is required',\n\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\tvalue: 8,\n\t\t\t\t\t\t\tmessage: 'Confirm Password is too short',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\tvalue: 255,\n\t\t\t\t\t\t\tmessage: 'Confirm Password is too long',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidate: {\n\t\t\t\t\t\t\tvalue: (value) => value === passwordWatch,\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t\tshouldCheck={shouldCheck}\n\t\t\t\t\tinvalid={errors?.passConfirm}\n\t\t\t\t\tname='passConfirm'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t/>\n\t\t\t\t{renderErrors()}\n\t\t\t\t<button\n\t\t\t\t\tid='submit'\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonClick={() => setShouldCheck(true)}\n\t\t\t\t>\n\t\t\t\t\tJoin\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport './App.scss';\nimport { NavBar } from './components/secondary/NavBar/NavBar';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Login } from './components/primary/Login/Login';\nimport { Join } from './components/primary/Join/Join';\n\nfunction App() {\n\treturn (\n\t\t<div id='App'>\n\t\t\t<NavBar />\n\t\t\t<div id='switchContainer'>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/login' component={Login} />\n\t\t\t\t\t<Route path='/join' component={Join} />\n\t\t\t\t\t<Redirect to='/login' />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<CookiesProvider>\n\t\t\t\t<App />\n\t\t\t</CookiesProvider>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}